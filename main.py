from telebot import types
import telebot
API_TOKEN = '7916764974:AAHJ7fxu0eFWgVgJMJsjC9k5bqth2W0yb4s' # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

bot = telebot.TeleBot(API_TOKEN)

OWNER_ID = 1444450406

@bot.message_handler(commands=['start'])
def welcome(message):
 markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
 item1 = types.KeyboardButton("–¢–æ–≤–∞—Ä—ã")
 markup.add(item1)

 bot.send_message(
  message.chat.id,
  f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n",
  parse_mode='html', reply_markup=markup
 )

@bot.message_handler(func=lambda message: message.text == "–¢–æ–≤–∞—Ä—ã")
def show_products(message):
 markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
 item_back = types.KeyboardButton("–ù–∞–∑–∞–¥")
 markup.add(item_back)

 texts = [
  "Midnight-Semirage"
 ]
 product_list = '\n'.join(texts)
 bot.send_message(message.chat.id, f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:\n{product_list}", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /buy
@bot.message_handler(commands=['buy'])
def button(message):
 markup = types.InlineKeyboardMarkup(row_width=2)
 item = types.InlineKeyboardButton('Boosty', callback_data='Boosty2')
 item_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back_to_products')
 markup.add(item, item_back)

 bot.send_message(message.chat.id, '–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã\n–ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–æ /verify', reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /verify
@bot.message_handler(commands=["verify"])
def button2(message):
 markup = types.InlineKeyboardMarkup(row_width=2)
 item1 = types.InlineKeyboardButton("–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ", callback_data="vers")
 item_back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_buy")
 markup.add(item1, item_back)

 bot.send_message(message.chat.id, 'üí∞ –û–ø–ª–∞—Ç–∏–ª–∏?\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ: —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ.', reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–∫–≤–∏—Ç–∞–Ω—Ü–∏–∏)
@bot.message_handler(content_types=["photo"])
def handle_receipt(message):
  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ
  file_id = message.photo[-1].file_id
  file = bot.get_file(file_id)


  bot.send_photo(OWNER_ID, file.file_path)

  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
  keyboard.add(types.KeyboardButton('–ü—Ä–∏–Ω—è—Ç—å'), types.KeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å'))

  # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–ª–∞–¥–µ–ª—å—Ü—É
  bot.send_message(OWNER_ID, '–ü—Ä–∏–Ω—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å?', reply_markup=keyboard)

  bot.send_message(message.chat.id, "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞. –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
 if call.message:
  if call.data == "vers":
   bot.send_message(call.message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É.")
  elif call.data == 'Boosty2':
   bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–Ω–æ —Ç—É —Å—É–º–º—É, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä')
  elif call.data == 'funpay2':
   bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ‚ùå')
  elif call.data == 'back_to_products':
   show_products(call.message)
  elif call.data == 'back_to_buy':
   button(call.message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞
@bot.message_handler(func=lambda message: message.chat.id == OWNER_ID)
def handle_owner_response(message):
  if message.text == "–ü—Ä–∏–Ω—è—Ç—å":
    bot.send_message(message.reply_to_message.forward_from.id, '123') # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "123" –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
  elif message.text == "–û—Ç–∫–ª–æ–Ω–∏—Ç—å":
    pass # –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "–ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é –¢–æ–≤–∞—Ä–æ–≤
@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥")
def back_to_start(message):
 welcome(message)

bot.polling(none_stop=True)
